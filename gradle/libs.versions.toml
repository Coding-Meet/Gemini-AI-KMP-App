[versions]
agp = "8.2.0"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
androidx-appcompat = "1.6.1"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.12.0"
androidx-espresso-core = "3.5.1"
androidx-material = "1.10.0"
androidx-test-junit = "1.1.5"
compose = "1.5.4"
compose-compiler = "1.5.6"
coreSplashscreen = "1.0.1"
koinCompose = "1.1.0"
moko-mvvm = "0.16.1"
kotlinx-datetime = "0.5.0"
compose-plugin = "1.6.0-alpha01"
junit = "4.13.2"
kotlin = "1.9.21"
coreI18n = "1.0.0-alpha01"
mpfilepicker = "3.1.0"
koin = "3.5.3"
multiplatformMarkdownRenderer = "0.10.0"
multiplatformSettingsNoArg = "1.1.1"
precomposeKoin = "1.5.10"
precomposeViewmodel = "1.5.10"
precompose = "1.5.10"
sqldelight = "2.0.1"
appyx-navigation = "2.0.0-alpha09"
ktor = "2.3.7"
coroutines = "1.8.0-RC2"
kermit = "2.0.2"
animationAndroid = "1.5.4"
buildkonfig = "0.15.1"
kstore = "0.7.1"


[libraries]
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
moko-mvvm = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-core-i18n = { group = "androidx.core", name = "core-i18n", version.ref = "coreI18n" }

kotlinx-coroutines = {module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref="coroutines"}

ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = {module = "io.ktor:ktor-client-android", version.ref = "ktor"}
ktor-client-core = {module = "io.ktor:ktor-client-core", version.ref = "ktor"}
ktor-client-content-negotiation = {module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-java = {module = "io.ktor:ktor-client-java", version.ref = "ktor"}
ktor-client-serialization = {module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"}
ktor-client-logging = {module = "io.ktor:ktor-client-logging", version.ref = "ktor"}

kermit = {module = "co.touchlab:kermit", version.ref = "kermit"}


mpfilepicker = { module = "com.darkrockstudios:mpfilepicker", version.ref = "mpfilepicker" }
multiplatform-markdown-renderer = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "multiplatformMarkdownRenderer" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettingsNoArg" }

koin-android = {group = "io.insert-koin", name = "koin-android", version.ref="koin"}
koin-core = {group = "io.insert-koin", name = "koin-core", version.ref="koin"}
koin-core-coroutine = {module = "io.insert-koin:koin-core-coroutines", version.ref="koin"}

precompose-koin = { module = "moe.tlaster:precompose-koin", version.ref = "precomposeKoin" }
precompose-viewmodel = { module = "moe.tlaster:precompose-viewmodel", version.ref = "precomposeViewmodel" }
precompose = { module = "moe.tlaster:precompose", version.ref = "precompose" }
sqldelight-coroutine-ext = {module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight"}
sqldelight-primitive-adapters = {module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight"}
spotlight = { module = "com.bumble.appyx:spotlight", version.ref = "appyx-navigation" }
spotlight-android = { module = "com.bumble.appyx:spotlight-android", version.ref = "appyx-navigation" }
sqldelight-android-driver = {module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight"}
sqldelight-native-driver = {module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight"}
web-worker-driver = { module = "app.cash.sqldelight:web-worker-driver", version.ref = "sqldelight" }
sqlite-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
androidx-animation-android = { group = "androidx.compose.animation", name = "animation-android", version.ref = "animationAndroid" }

kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
kstore-storage = { module = "io.github.xxfast:kstore-storage", version.ref = "kstore" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }